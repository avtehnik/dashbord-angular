{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chart/chart.component.ts","webpack:///src/app/chart/chart.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","httpService","query","title","powerObj","voltage","current","power","energy","frequency","loadData","setInterval","get","subscribe","response","tempObj","data","err","console","log","message","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChartComponent","min","max","step","canvasWidth","options","arcLabels","hasNeedle","needleUpdateSpeed","needleStartValue","arcColors","arcDelimiters","rangeLabel","value","r1","r2","arr","count","stop","push","newStep","myRange","tempValue","convertRange","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Temperature info';\n  tempObj: [];\n  powerObj = {voltage: 0, current: 0, power: 0, energy: 0, frequency: 0};\n  constructor(private httpService: HttpClient, private query: HttpClient ) {\n  }\n  ngOnInit() {\n    this.loadData();\n    setInterval( () =>  {\n      this.loadData();\n    }, 3000);\n  }\n  loadData() {\n    this.httpService.get('http://192.168.1.5/temperature.php').subscribe(\n      response => {\n        // @ts-ignore\n        this.tempObj = response.data;\n      },\n      (err: HttpErrorResponse) => {\n        console.log (err.message);\n      });\n    this.query.get('http://192.168.1.133/info.json').subscribe(\n      response => {\n        // @ts-ignore\n        this.powerObj = response;\n      },\n      (err: HttpErrorResponse) => {\n        console.log (err.message);\n      });\n  }\n}\n","<div class=\"container my-5 mx-auto\">\n  <h1 class=\"text-center my-5\">{{title}}</h1>\n  <div class=\"row border-bottom\">\n    <app-chart *ngFor=\"let temp of tempObj\" class=\"col-lg-3 col-md-6 col-xs-12 my-3\"\n               [tempValue]=\"temp.temp\"\n               [tempLabel]=\"temp.temp + ' Â°C'\"\n               [temp]=\"temp.name | titlecase\">\n    </app-chart>\n  </div>\n  <div class=\"row\">\n    <h1 class=\"text-center my-5 mx-auto\">Electricity info</h1>\n  </div>\n  <div class=\"row border-bottom\">\n    <app-chart  class=\"col-lg-3 col-md-6 col-xs-12 my-3 \"\n               [min] = \"200\"\n               [max] = \"260\"\n               [tempValue]=\"powerObj.voltage\"\n               [tempLabel]=\" powerObj.voltage + ' V'\"\n               temp =\"Voltage\">\n    </app-chart>\n    <app-chart  class=\"col-lg-3 col-md-6 col-xs-12 my-3 \"\n                [min] = \"0\"\n                [max] = \"50\"\n                [tempValue]=\"powerObj.current | number\"\n                [tempLabel]=\" (powerObj.current | number) + ' A'\"\n                temp =\"Current\">\n    </app-chart>\n    <app-chart  class=\"col-lg-3 col-md-6 col-xs-12 my-3 \"\n                [min] = \"0\"\n                [max] = \"20\"\n                [tempValue]=\"(powerObj.power / 1000) | number \"\n                [tempLabel]=\" ((powerObj.power / 1000) | number) + ' Kwh'\"\n                temp =\"Power\">\n    </app-chart>\n    <app-chart  class=\"col-lg-3  col-md-6 col-xs-12 my-3 \"\n                [min] = \"0\"\n                [max] = \"300\"\n                [tempValue]=\"powerObj.energy \"\n                [tempLabel]=\" powerObj.energy + ' Kw'\"\n                temp =\"Energy\">\n    </app-chart>\n    <app-chart  class=\"col-lg-3 col-md-6 col-xs-12 my-3 \"\n                [min] = \"40\"\n                [max] = \"60\"\n                [tempValue]=\"powerObj.frequency \"\n                [tempLabel]=\" powerObj.frequency + ' Hz'\"\n                temp =\"Frequency\">\n    </app-chart>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\n\nimport { GaugeChartModule } from 'angular-gauge-chart';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChartComponent } from './chart/chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    GaugeChartModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {range} from 'rxjs';\n\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss']\n})\nexport class ChartComponent implements OnInit, OnChanges {\n\n  @Input() tempValue: number;\n  @Input() tempLabel: string;\n  @Input() temp: string;\n  @Input() min = 0;\n  @Input() max  = 100;\n  @Input() step  = 20;\n  canvasWidth = 300;\n  options = {\n    arcLabels: [ '20', '40', '60', '80'],\n    hasNeedle: true,\n    needleUpdateSpeed: 0,\n    needleStartValue: 50,\n    arcColors: ['rgb(104, 237, 43)', 'rgb(195, 237, 43)', 'rgb(237, 205, 43)', 'rgb(237, 159, 43)', 'rgb(237, 62, 43)'],\n    arcDelimiters: [20, 40, 60, 80],\n    rangeLabel: [ '0', '100'],\n  };\n   convertRange( value: number, r1, r2 ): number {\n     return ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\n  }\n  myRange(min: number, max: number, step: number) {\n     const arr = [];\n     let count = min;\n     let stop = 0;\n     while ( (count < max) && stop < 100) {\n       stop++;\n       count  = count + step;\n       arr.push(count);\n    }\n     return arr;\n  }\n  ngOnInit() {\n      this.options.rangeLabel = [ this.min + '', this.max + ''];\n      const newStep = (this.max - this.min) / 5;\n      this.options.arcLabels = this.myRange(this.min, this.max, newStep);\n      this.tempValue = this.convertRange(this.tempValue, [this.min , this.max ], [ 0, 100] );\n  }\n  ngOnChanges() {\n    this.tempValue = this.convertRange(this.tempValue, [this.min , this.max ], [ 0, 100] );\n  }\n}\n","<rg-gauge-chart\n  [canvasWidth]=\"canvasWidth\"\n  [options]=\"options\"\n  [needleValue] =\"tempValue\"\n  [bottomLabel] = \"tempLabel\"\n  [name] = \"temp\"></rg-gauge-chart>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}